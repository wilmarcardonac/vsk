<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.1//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>write_tqu</TITLE>
<META NAME="description" CONTENT="write_tqu">
<META NAME="keywords" CONTENT="idl">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<meta name="viewport" content="width=device-width, initial-scale=1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="idl.css">

<LINK REL="next" HREF="idlnode74.htm">
<LINK REL="previous" HREF="idlnode72.htm">
<LINK REL="up" HREF="idl.htm">
<LINK REL="next" HREF="idlnode74.htm">
</HEAD>

<BODY >

<DIV CLASS="navigation"><body text="#000000" bgcolor="#FFFFFA">
<!--Navigation Panel-->
<A NAME="tex2html1101"
  HREF="idlnode72.htm">
<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous" SRC="prev.png"></A> 
<A NAME="tex2html1107"
  HREF="idl.htm">
<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up" SRC="up.png"></A> 
<A NAME="tex2html1111"
  HREF="idlnode74.htm">
<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next" SRC="next.png"></A> 
<A NAME="tex2html1109"
  HREF="idlnode1.htm">
<IMG WIDTH="65" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="contents" SRC="contents.png"></A>  
<BR>
<B> Previous:</B> <A NAME="tex2html1102"
  HREF="idlnode72.htm">write_fits_sb</A>

<B>Up:</B> <A NAME="tex2html1108"
  HREF="idl.htm">HEALPix/IDL subroutines</A>

<B> Next:</B> <A NAME="tex2html1112"
  HREF="idlnode74.htm">About this document ...</A>
<B> Top:</B> <a href="main.htm">Main Page</a></DIV>
<!--End of Navigation Panel-->

<H1><A NAME="SECTION000730000000000000000"></A>
<A NAME="idl:write_tqu"></A>
<BR>
 
</H1>
<P>
<b><font size=+6><FONT COLOR="#CC0000">write_tqu</FONT></font></b><hr>
<H3>This IDL facility writes a temperature+polarization Healpix map (T,Q,U) into a
binary table FITS file, 
with optionally the error (dT,dQ,dU) and correlation (dQU, dTU, dTQ)
in separate extensions
</H3>
Location in HEALPix directory tree: <a href="http://sourceforge.net/p/healpix/code/806/tree/trunk/src/idl/fits/write_tqu.pro"><b>src/idl/fits/write_tqu.pro</b></a>&nbsp;  
<P>
<hr><h1>FORMAT </h1><h3>IDL>
WRITE_TQU , <A HREF="#idl:write_tqu:File">File</A>, <A HREF="#idl:write_tqu:TQU">TQU</A>, [<A HREF="#idl:write_tqu:Coordsys">Coordsys=</A>, <A HREF="#idl:write_tqu:Nested">Nested=</A>, <A HREF="#idl:write_tqu:Ring">Ring=</A>, <A HREF="#idl:write_tqu:Ordering">Ordering=</A>, <A HREF="#idl:write_tqu:Error">Error=</A>, <A HREF="#idl:write_tqu:Extension">Extension=</A>, <A HREF="#idl:write_tqu:Help">Help=</A>, <A HREF="#idl:write_tqu:Hdr">Hdr=</A>, <A HREF="#idl:write_tqu:Xhdr">Xhdr=</A>, <A HREF="#idl:write_tqu:Units">Units=</A>, <A HREF="#idl:write_tqu:Help">Help=</A>]
</h3>
<P>
<hr>
<H1>QUALIFIERS</H1>
 
  </SMALL><DL COMPACT><DT>
<B>File</B>
<DD>name of a FITS file in which the maps are to be written

<P>
<DT>
<B>TQU</B>
<DD>array of Healpix maps of size (<SPAN CLASS="MATH"><IMG
 WIDTH="39" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="idlimg88.png"
 ALT="$N_{\rm pix}$"></SPAN>,3,<TT>n_ext</TT>) where <SPAN CLASS="MATH"><IMG
 WIDTH="39" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="idlimg88.png"
 ALT="$N_{\rm pix}$"></SPAN> is the total
   number of Healpix pixels on the sky, and <TT>n_ext</TT> <SPAN CLASS="MATH"><IMG
 WIDTH="19" HEIGHT="33" ALIGN="MIDDLE" BORDER="0"
 SRC="idlimg93.png"
 ALT="$\le$"></SPAN> 3.
<BR>
Three maps are written in each extension of the FITS file : 
<BR>      -the temperature+polarization Stokes parameters maps (T,Q,U) in
   extension 0 
<BR>      -the error maps (dT,dQ,dU) (if <TT>n_ext</TT> <SPAN CLASS="MATH"><IMG
 WIDTH="19" HEIGHT="33" ALIGN="MIDDLE" BORDER="0"
 SRC="idlimg92.png"
 ALT="$\ge$"></SPAN> 2) in extension 1 
<BR>      -the correlation maps (dQU, dTU, dTQ) (if <TT>n_ext</TT> = 3) in extension 2

<BR>
it is also possible to write 3 maps directly in a given
     extension (provided the preceding extension, if any, is already
     filled in)
     by setting <TT>Extension</TT> to the extension number in which to write
     (0 based) and if <TT>n_ext</TT> + <TT>Extension</TT> <SPAN CLASS="MATH"><IMG
 WIDTH="19" HEIGHT="33" ALIGN="MIDDLE" BORDER="0"
 SRC="idlimg93.png"
 ALT="$\le$"></SPAN> 3

<P>
<DT>
<B>Coordsys=</B>
<DD>(optional), 
<BR>
if set to either 'C', 'E' or 'G',  specifies that the
		Healpix coordinate system is respectively Celestial=equatorial,
		  Ecliptic or Galactic.
		(The relevant keyword is then added/updated in the extension
		  header, but the map is NOT rotated)

<P>
<DT>
<B>Error=</B>
<DD>(optional output), 
<BR>
will take value 1 if file can not be written

<P>
<DT>
<B>Extension=</B>
<DD>(optional), 
<BR>
extension unit a which to put the data (0 based). The physical
		interpretation of the maps is determined by the
		extension in which they are written
<BR>	<i>see also:</i>TQU

<P>
<DT>
<B>Hdr=</B>
<DD>(optional), 
<BR>
string variable containing on input  the information to be added
		  to the primary header. (If already present, FITS reserved
		  keywords will be automatically updated).

<P>
<DT>
<B>Ordering=</B>
<DD>(optional), 
<BR>
if set to either 'ring' or 'nested' (case un-sensitive),
		  specifies that the map is respectively in RING or NESTED
		  ordering scheme
<BR>		<i>see also:</i>Nested and Ring

<P>
<DT>
<B>Units=</B>
<DD>(optional), 
<BR>
string describing the physical units of the data set

<P>
<DT>
<B>Xhdr=</B>
<DD>(optional), 
<BR>
string variable containing on input  the information to be added
		  to the extension headerx. (If already present, FITS reserved
		  keywords will be automatically updated). It will be
		    repeated in each extension, except for TTYPE* and EXTNAME which
		    are generated by the routine and depend on the extension

<P>
</DL><SMALL CLASS="FOOTNOTESIZE">

<P>
<hr><H1>KEYWORDS</H1>

  </SMALL><DL COMPACT><DT>
<B>Help</B>
<DD>if set, an extensive help is displayed and no
	file is written
	<DT>
<B>Nested</B>
<DD>if set, specifies that the map is in the NESTED ordering
	scheme
<BR>	<i>see also:</i>Ordering and Ring 
	<DT>
<B>Ring</B>
<DD>if set, specifies that the map is in the RING ordering
	scheme
<BR>	<i>see also:</i>Ordering and Nested
   </DL><SMALL CLASS="FOOTNOTESIZE">

<P>
<hr> 
<H1>DESCRIPTION</H1> 
<blockquote>
<FONT COLOR="#CC0000">write_tqu</FONT> writes out Stokes parameters (T,Q,U) maps for the whole
sky into a FITS file. It is also possible to write the error per pixel for each
map and the correlation between fields, as subsequent extensions of the same FITS
file (see qualifiers above). Therefore the file may have up to three extensions with three
maps in each. Extensions can be written together or one by one (in
their physical order) using the Extension option
</blockquote>
<P>
<hr><H1>RELATED ROUTINES</H1><h3>This section lists the routines related to <b><FONT COLOR="#CC0000">write_tqu</FONT></b></h3>
 
  </SMALL><DL COMPACT><DT>
<B>idl</B>
<DD>version 6.4 or more is necessary to run <FONT COLOR="#CC0000">write_tqu</FONT>
  <DT>
<B><A HREF="idlnode61.htm#idl:read_tqu">read_tqu</A></B>
<DD>This <b>HEALPix</b> IDL facility can be used to read in maps
  written by <FONT COLOR="#CC0000">write_tqu</FONT>.
  <DT>
<B><A HREF="idlnode60.htm#idl:read_fits_s">read_fits_s</A></B>
<DD>This <b>HEALPix</b> IDL facility can be used to read
  into an IDL structure maps written by <FONT COLOR="#CC0000">write_tqu</FONT>.
  <DT>
<B>sxaddpar</B>
<DD>This IDL routine (included in <b>HEALPix</b> package) can be used to update
  or add FITS keywords to the header(s) HDR or XHDR
  <DT>
<B><A HREF="idlnode70.htm#idl:write_fits_cut4">write_fits_cut4</A>,
<A HREF="idlnode71.htm#idl:write_fits_map">write_fits_map</A></B>
<DD><DT>
<B><A HREF="#idl:write_tqu">write_tqu</A>,
<A HREF="idlnode72.htm#idl:write_fits_sb">write_fits_sb</A></B>
<DD><b>HEALPix</b> IDL routines to write cut-sky maps, full-sky maps, polarized full-sky maps and
arbitrary data sets into FITS files
  </DL><SMALL CLASS="FOOTNOTESIZE">

<P>
<HR><H1>EXAMPLE:</H1> 
<tt></SMALL><TABLE CELLPADDING=3>
<TR><TD ALIGN="LEFT"><SMALL CLASS="FOOTNOTESIZE"> npix = <A HREF="idlnode48.htm#idl:nside2npix">nside2npix</A>(64) </SMALL></TD>
</TR>
<TR><TD ALIGN="LEFT"><SMALL CLASS="FOOTNOTESIZE"> TQU = randomn(seed,npix,3) </SMALL></TD>
</TR>
<TR><TD ALIGN="LEFT"><SMALL CLASS="FOOTNOTESIZE"> write_tqu,  'map_polarization.fits', TQU, coord='G', /ring</SMALL></TD>
</TR>
</TABLE><SMALL CLASS="FOOTNOTESIZE"></tt>
<blockquote>
The array TQU is defined to contain a fictitious polarisation map, with
the 3 Stokes parameters T, Q and U. The map is assumed to be in
Galactic coordinates, with a RING ordering of the pixels and <!-- MATH
 $N_{\rm side}=64$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="87" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="idlimg108.png"
 ALT="$N_{\rm side}=64$"></SPAN>.
<FONT COLOR="#CC0000">write_tqu</FONT> writes out the contents of TQU into the extension 
of the FITS file 'map_polarization.fits'.
</blockquote>
<P>

<DIV CLASS="navigation"><HR>
<!--Navigation Panel-->
<A NAME="tex2html1101"
  HREF="idlnode72.htm">
<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous" SRC="prev.png"></A> 
<A NAME="tex2html1107"
  HREF="idl.htm">
<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up" SRC="up.png"></A> 
<A NAME="tex2html1111"
  HREF="idlnode74.htm">
<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next" SRC="next.png"></A> 
<A NAME="tex2html1109"
  HREF="idlnode1.htm">
<IMG WIDTH="65" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="contents" SRC="contents.png"></A>  
<BR>
<B> Previous:</B> <A NAME="tex2html1102"
  HREF="idlnode72.htm">write_fits_sb</A>

<B>Up:</B> <A NAME="tex2html1108"
  HREF="idl.htm">HEALPix/IDL subroutines</A>

<B> Next:</B> <A NAME="tex2html1112"
  HREF="idlnode74.htm">About this document ...</A>
<B> Top:</B> <a href="main.htm">Main Page</a></DIV>
<!--End of Navigation Panel-->
<ADDRESS>
Version 3.30, 2015-10-08
</ADDRESS>
</BODY>
</HTML>
